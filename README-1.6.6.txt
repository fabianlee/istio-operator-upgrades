# list all containers in cluster
kubectl get pods --all-namespaces -o jsonpath="{.items[*].spec.containers[*].image}" |\
tr -s '[[:space:]]' '\n' |\
sort |\
uniq -c

# wait for deployment to be ready
# https://reuvenharrison.medium.com/how-to-wait-for-a-kubernetes-pod-to-be-ready-one-liner-144bbbb5a76f
while [[ $(kubectl get pods -l app=hello -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do echo "waiting for pod" &amp;&amp; sleep 1; done

# kubectl wait man page
https://www.mankier.com/1/kubectl-wait

#
# To remove the OOTB istio that comes with Anthos 1.4 and replace with a full 1.6.6 istio operator
#

# remove my istio components
cd ~/k8s
kubectl delete -f istio-ootb/my-istio-virtualservice.yaml
kubectl delete -f istio-ootb/istio-autogenerated-k8s-ingress.yaml
kubectl delete -f istio/my-service-for-istio.yaml

# remove ootb istio components
cd ~/k8s/istio-ootb
./delete-istio-ootb-components.sh

# create tls key/cert, k8s TLS secret, istio gateway using secret
cd ~/k8s/istio
./make-self-signed-cert.sh


kubectl create ns istio-system
cd ~/k8s/istio-operator
./create-k8s-tls-secret.sh
cd ~/k8s


#
# TO remove k3s 1.9.7 operator from k3s playbook
#
cd istio-operator-upgrades
export rootdir=$(realpath .)
export istiover=1.9.7
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=$istiover sh -
# leave istio-operator and istio-system namespace so TLS secret not deleted
./delete-revisioned-controlplane.sh istio-$istiover/bin/istioctl 1.9.7


#
# install istio 1.6.6 operator, fresh but without a revision
#
export rootdir=$(realpath .)
export istiover=1.6.6
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=$istiover sh -

istio-$istiover/bin/istioctl x precheck
# 1.6.6 operator does NOT have a concept of '--revision 1-6-6'
# https://console.cloud.google.com/gcr/images/istio-release/GLOBAL
$ istio-$istiover/bin/istioctl operator init --hub gcr.io/istio-release
Using operator Deployment image: gcr.io/istio-release/operator:1.6.6
✔ Istio operator installed                                                                                              
✔ Installation complete

kubectl get all -n istio-operator

kubectl create ns istio-system

$ kubectl apply -f istio-operator-1.6.6-no-revision.yaml
istiooperator.install.istio.io/istio-control-plane created

# until you see "Ingress gateways installed"
./show-istio-operator-logs.sh default

# then wait for all components to be 'Running' (istiod,istio-ingressgateway,grafana,prometheus)
$ kubectl get pods -n istio-system
$ kubectl wait --for="condition=Ready" pods -l="app in (istio-ingressgateway,istiod)" -n istio-system
pod/istiod-65b57c788-hs8t6 condition met
pod/istio-ingressgateway-84cc5bf55b-sqxrc condition met

# 'istio-ingressgateway' will be on EXTERNAL-IP
kubectl get services -n istio-system

# apply legacy namespace labels for 1.6.6 (older 'istio-injection')
./set-namespace-labels-legacy.sh

# notice because of no revision there are no versions on: operator, iop, istiod, mutatingwebhook
./show-istio-objects.sh

# 'my-istio-deployment' and 'my-istio-service'
kubectl apply -f istio-operator/my-istio-deployment-and-service.yaml
# 'my-istio-virtualservice'
kubectl apply -f istio-operator/my-istio-virtualservice.yaml
# 'istio-ingressgateway' referencing 'tls-credential' secret
kubectl apply -f istio-operator/my-istio-ingress-gateway.yaml

# rolling deployment restart and wait for ready
kubectl rollout restart -n default deployment/my-istio-deployment
kubectl rollout status deployment my-istio-deployment

# validate from either admin ws or host
$ curl -k https://anthos.home.lab/istio
Hello, world!
Version: 1.0.0
Hostname: my-istio-deployment-d6cbc8689-cmtxx

# check for interruptions in different console
./test-istio-endpoint.sh



#
# before upgrading to 1.7.5, take 1-6-6 to revisioned control plane
# canary is not suported with non-revisioned operators until 1.8, https://github.com/istio/istio/issues/28964
#

# change to newer style namespace labels
./set-namespace-labels.sh 1.6.6

# make pilot addon explicit and make control plane revision '1-6-6' for istiod and istiosidecareinjector
kubectl apply -f istio-operator-1.6.6-prepare-for-1.7.yaml

# until you see "Addons installed"
./show-istio-operator-logs.sh default

# notice new revisions on: istiod, iop, mutatingwebhook
./show-istio-objects.sh

# delete default (no-revision) control plane objects leaving only the revision ones
# leave operator 'istio-operator'
./delete-non-revision-controlplane.sh

# notice the only vestige of non-revisioned objects is the operator 'istio-operator'
# will get removed after 1.7.5 installed
./show-istio-versions.sh

# rolling deployment restart, but not really needed since the proxyv2:1.6.6 was already applied
kubectl rollout restart -n default deployment/my-istio-deployment
kubectl rollout status deployment my-istio-deployment


#
# installing revisioned 1.7.5
#
# https://istio.io/v1.7/docs/setup/upgrade/
# https://banzaicloud.com/blog/istio-canary-upgrade/

cd ~/k8s
export istiover=1.7.5
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=$istiover sh -

istio-$istiover/bin/istioctl x precheck

istio-$istiover/bin/istioctl operator init --revision 1-7-5 --hub gcr.io/istio-release
Using operator Deployment image: docker.io/istio/operator:1.7.5
2021-08-28T22:13:45.885707Z	info	proto: tag has too few fields: "-"
✔ Istio operator installed                                                                                              
✔ Installation complete

# now have 2 operators, one revisioned at 1-7-5
kubectl get all -n istio-operator

# create iop object with revisioned control plane 
$ kubectl create -f istio-operator-1.7.5.yaml

# until you see "Ingress gateways installed"
./show-istio-operator-logs.sh 1-7-5

# then wait for all components to be 'Running'
watch -n2 kubectl get pods -n istio-system
NAME                                    READY   STATUS    RESTARTS   AGE
istio-ingressgateway-6b48bb4d46-n98cr   1/1     Running   0          41s
istiod-1-6-6-56c494d958-qp9j6           1/1     Running   0          3m47s
istiod-1-7-5-645d5c6d46-jrzmw           1/1     Running   0          50s

# apply namespace label istio.io/rev to default ns
./set-namespace-labels.sh 1-7-5

# show object versions
./show-istio-objects.sh

# rolling deployment restart, then wait for it to finish
kubectl rollout restart -n default deployment/my-istio-deployment
kubectl rollout status  -n default deployment my-istio-deployment

./show-istio-objects.sh


#
# uninstall the old control plane 1-6-6
#

# will see both 1-6-6 and 1-7-5 control planes
./show-istio-objects.sh

# wait for state to go HEALTHY for 1-7-5, about 90 seconds
watch kubectl get -n istio-system iop

# delete old non-revision istio operator deployment and service
./delete-revisioned-controlplane.sh istio-1.6.6/bin/istioctl 1.6.6

./delete-non-revision-operator.sh
# remove versioned sidecar injector, istiod service and deployment 
kubectl delete mutatingwebhookconfiguration/istio-sidecar-injector-1-6-6
kubectl delete -n istio-system service/istiod-1-6-6
kubectl delete -n istio-system hpa/istiod-1-6-6
kubectl delete -n istio-system pdb/istiod-1-6-6
kubectl delete -n istio-system deployment/istiod-1-6-6

# only 1-7-5 will be present
$ istio-operator/show-istio-versions.sh


##### THINGS THAT DID NOT WORK!!! ################
# this is NOT a valid 1.6.6 command, does not have 'x uninstall' in this older version
# $ istio-1.6.6/bin/istioctl x uninstall

# DO NOT use this because it deletes all operators!
# $ istio-1.6.6/bin/istioctl operator remove

##################################################


